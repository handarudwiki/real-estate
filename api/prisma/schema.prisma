// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Type{
  buy
  rent
}

enum Property{
  apartment
  house
  condo
  land
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  username String @unique
  password String 
  avatar String?
  cretated_at DateTime @default(now())
  updated_at DateTime @updatedAt
  post Post[]
  savedPost SavedPost[]
  chat Chat[]

  @@map("users")
}

model Post{
  id Int @id @default(autoincrement())
  title String
  price Int
  images String[]
  address String
  city String
  bedroom Int
  bathroom Int
  latitude String
  longitude String
  type Type
  property Property
  postDetail PostDetail?
  savedPost SavedPost?
  userId Int
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("posts")
}

model PostDetail{
  id Int @id @default(autoincrement())
  description String
  utilities String?
  pet String?
  income String?
  size Int?
  school Int?
  bus Int?
  restaurant Int?
  postId Int @unique
  post Post @relation(fields: [postId], references: [id])

  @@map("post_details")
}

model SavedPost{
  id Int @id @default(autoincrement())
  userId Int 
  postId Int @unique
  post Post @relation(fields: [postId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@map("saved_posts")
} 

model ChatUser{
  id Int @id @default(autoincrement())

}

model Chat{
  id Int @id @default(autoincrement())
  userIds Int[]
  users User[] 
  createdAt DateTime @default(now())
  seenBy Int[] 
  message Message[]
  lastMessage String?

  @@map("chats")
}

model Message{
  id Int @id @default(autoincrement())
  text String
  userId Int
  chatId Int
  chat Chat @relation(fields: [chatId], references: [id]) 
  createdAt DateTime @default(now())
}